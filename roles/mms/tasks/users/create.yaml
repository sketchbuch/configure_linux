- name: 'Users > {{ userUsername }} > Create: Check if user "{{ userUsername }}" already exists'
  become: true
  ansible.builtin.getent:
    database: passwd
    fail_key: false
    key: "{{ userUsername }}"
  changed_when: false
  register: userExists

- name: 'Users > {{ userName }} > Create: User group "{{ userGroup }}"'
  become: true
  ansible.builtin.group:
    name: "{{ userGroup }}"
    state: present
  tags: ["system", "users", "mms"]

- name: 'Users > {{ userName }} > Create: User "{{ userUsername }}"'
  become: true
  ansible.builtin.user:
    comment: "{{ userName }}"
    groups: "{{ userGroup }}, sudo"
    name: "{{ userUsername }}"
    password: "{{ userPassword | password_hash }}"
    shell: /bin/bash
    state: present
    update_password: "on_create"
  tags: ["system", "users", "mms"]

# This file would normally be made on login, but we need to create it as we will not be logging in.
- name: "Users > {{ userName }} > Create: Copy AccountsService file"
  become: true
  ansible.builtin.copy:
    src: "accounts_service"
    dest: "/var/lib/AccountsService/users/{{ userUsername }}"
    owner: "root"
    group: "root"
    mode: 0700
  tags: ["system", "users", "mms"]

# Only done if the user did not already exist and we created one with the above tasks
- name: "Users > {{ userName }} > Create: Force password change on next login"
  become: true
  ansible.builtin.shell:
    cmd: "chage -d 0 {{ userUsername }}"
  tags: ["system", "users", "mms"]
  when: userExists.ansible_facts.getent_passwd[userUsername] is none
