
- name: 'Users > MMS > Create: Check if user "{{ mmsUsername }}" already exists'
  become: true
  ansible.builtin.getent:
    database: passwd
    fail_key: false
    key: '{{ mmsUsername }}'
  changed_when: false

- name: 'Users > MMS > Create: user group "{{ mmsGroup }}"'
  become: true
  ansible.builtin.group:
    name: '{{ mmsGroup }}'
    state: present
  tags: ['system', 'users', 'mms']

- name: 'Users > MMS > Create: user "{{ mmsUsername }}"'
  become: true
  ansible.builtin.user:
    comment: 'MMS'
    groups: '{{ mmsGroup }}, sudo'
    name: '{{ mmsUsername }}'
    password: '{{ mmsPassword | password_hash }}'
    shell: /bin/bash
    state: present
    update_password: 'on_create'
  tags: ['system', 'users', 'mms']

# This file would normaly be made on login, but we need to create it as we will not be logging in.
- name: 'Users > MMS > Create: Copy AccountsService file'
  become: true
  ansible.builtin.copy:
    src: 'users/{{ mmsUsername }}/acounts_service'
    dest: '/var/lib/AccountsService/users/{{ mmsUsername }}'
    owner: 'root'
    group: 'root'
    mode: 0700
  tags: ['system', 'users', 'mms']

# Only done if the user did not already exist and we created one with the above tasks
- name: 'Users > MMS > Create: TEST'
  become: true
  ansible.builtin.debug:
    var: getent_passwd[mmsUsername]
  tags: ['system', 'users', 'mms']

- name: 'Users > MMS > Create: Force password change on next login'
  become: true
  ansible.builtin.shell:
    cmd: 'chage -d 0 {{ mmsUsername }}'
  tags: ['system', 'users', 'mms']
  when: 'getent_passwd[mmsUsername] == "null"'
